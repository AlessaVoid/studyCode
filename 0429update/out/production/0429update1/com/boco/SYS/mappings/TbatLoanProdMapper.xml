<?xml version="1.0" encoding="GBK"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- TbatLoanProd -->
<mapper namespace="com.boco.SYS.mapper.TbatLoanProdMapper">
	<!-- ##############################################批量生成方法########################################### -->
	<cache readOnly="true"/>
	<!-- 返回列表 -->
    <resultMap id="base_result_map" type="com.boco.SYS.entity.TbatLoanProd">
       	<id column="data_date" property="dataDate"/>
       	<id column="prodt_id" property="prodtId"/>
       	<id column="inst_no" property="instNo"/>
     	<result column="total_bal" property="totalBal"/>
    </resultMap>

	<!-- 列集合 -->
	<sql id="base_column_list">
	    <![CDATA[
        data_date ,prodt_id ,inst_no ,total_bal 
	    ]]>
	</sql>
	
	<!-- 新增一条实体 -->
    <insert id="insertEntity" parameterType="com.boco.SYS.entity.TbatLoanProd">
<!-- 
        <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">  
	       SELECT SQ_WEB_PUB.Nextval as ID from DUAL
	    </selectKey>
	    -->       
  INSERT INTO t_bat_loan_prod 
        <trim prefix="(" suffix=")" suffixOverrides=",">
	       	<if test="dataDate != null">
	        	data_date ,
	       	</if>
	       	<if test="prodtId != null">
	        	prodt_id ,
	       	</if>
	       	<if test="instNo != null">
	        	inst_no ,
	       	</if>
	       	<if test="totalBal != null">
	        	total_bal 
	       	</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
	       	<if test="dataDate != null">
	        	#{dataDate} ,
	       	</if>
	       	<if test="prodtId != null">
	        	#{prodtId} ,
	       	</if>
	       	<if test="instNo != null">
	        	#{instNo} ,
	       	</if>
	       	<if test="totalBal != null">
	        	#{totalBal} 
	       	</if>
        </trim>
    </insert>
    
    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO t_bat_loan_prod 
        (data_date ,prodt_id ,inst_no ,total_bal )
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
        	(SELECT #{item.dataDate,jdbcType=VARCHAR},#{item.prodtId,jdbcType=VARCHAR},#{item.instNo,jdbcType=VARCHAR},#{item.totalBal,jdbcType=VARCHAR} FROM DUAL)
        </foreach>
    </insert>
    
    <!-- 根据主键删除一条记录 -->
    <delete id="deleteByPK" parameterType="java.util.HashMap">
        DELETE FROM t_bat_loan_prod 
        <where>
        	data_date = #{dataDate} and
        	prodt_id = #{prodtId} and
        	inst_no = #{instNo} 
		</where>
    </delete>
    
    <!-- 根据主键删除一条记录(不抛异常,适用先删除后新增的功能,删除时如果没数据不抛异常) -->
    <delete id="deleteByPKNoException" parameterType="java.util.HashMap">
        DELETE FROM t_bat_loan_prod 
        <where>
        	data_date = #{dataDate} and
        	prodt_id = #{prodtId} and
        	inst_no = #{instNo} 
		</where>
    </delete>
    
    <!-- 根据主键批量删除记录(只适用单主键的表) -->
    <delete id="deleteBatchByPK" parameterType="java.util.List">
        DELETE FROM t_bat_loan_prod 
        WHERE data_dateprodt_idinst_no IN 
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
        #{item}
		</foreach>
    </delete>
	
	<!-- 自定义where条件删除，参数为where后的条件字符串，如"id='1' and name='a'" -->    
    <delete id="deleteByWhere" parameterType="java.lang.String">
        DELETE FROM t_bat_loan_prod
        <where>
        	${whereStr}
        </where>
    </delete>

	<!-- 根据主键修改一条记录 -->
    <update id="updateByPK" parameterType="com.boco.SYS.entity.TbatLoanProd">
        UPDATE t_bat_loan_prod 
        <set>
       	<if test="totalBal != null">
       		total_bal = #{totalBal},
       	</if>
        </set>
        <where>
        	data_date = #{dataDate} and
        	prodt_id = #{prodtId} and
        	inst_no = #{instNo} 
        </where>
    </update>
    
    <!-- 批量修改，参数：map(column="XXX"，keyList="XXX")-->
    <update id="updateBatch" parameterType="java.util.HashMap">
	    UPDATE t_bat_loan_prod 
		<set>
        </set>
        WHERE id IN 
	    <foreach collection="keyList" item="item" index="index" open="(" separator="," close=")">
        #{item}
		</foreach>
	</update>
     
    <!-- 自定义where条件修改，参数为where后的条件字符串，如"id='1' and name='a'" -->
    <update id="updateByWhere" parameterType="java.lang.String">
        UPDATE t_bat_loan_prod 
        <set>
       	<if test="dataDate != null">
       		data_date = #{dataDate},
       	</if>
       	<if test="prodtId != null">
       		prodt_id = #{prodtId},
       	</if>
       	<if test="instNo != null">
       		inst_no = #{instNo},
       	</if>
       	<if test="totalBal != null">
       		total_bal = #{totalBal},
       	</if>
        </set>
        <where>
       		${whereStr}
       	</where>
    </update>
    
    <!-- 动态where -->
    <sql id="where_equal">
	 	<if test="dataDate != null and dataDate != ''">
	 		and data_date = #{dataDate}
	 	</if>
	 	<if test="prodtId != null and prodtId != ''">
	 		and prodt_id = #{prodtId}
	 	</if>
	 	<if test="instNo != null and instNo != ''">
	 		and inst_no = #{instNo}
	 	</if>
	 	<if test="totalBal != null and totalBal != ''">
	 		and total_bal = #{totalBal}
	 	</if>
    </sql>
    
    <!-- 模糊查询动态where -->
    <sql id="where_like">
 		<if test="dataDate != null and dataDate != ''">
 			and data_date like '%' || #{dataDate} || '%'
 		</if>
 		<if test="prodtId != null and prodtId != ''">
 			and prodt_id like '%' || #{prodtId} || '%'
 		</if>
 		<if test="instNo != null and instNo != ''">
 			and inst_no like '%' || #{instNo} || '%'
 		</if>
 		<if test="totalBal != null and totalBal != ''">
 			and total_bal like '%' || #{totalBal} || '%'
 		</if>
    </sql>

    <!-- 根据主键查询一条记录 -->
    <select id="selectByPK" parameterType="java.util.HashMap" resultMap="base_result_map" flushCache="true">
	    SELECT <include refid="base_column_list"/>
        FROM t_bat_loan_prod 
        <where> 
        	data_date = #{dataDate} and
        	prodt_id = #{prodtId} and
        	inst_no = #{instNo} 
        </where>
    </select>
    
    <!-- 根据非主键唯一约束查询记录,没有唯一约束时查询所有记录 -->
    <select id="selectByUQ" parameterType="com.boco.SYS.entity.TbatLoanProd" resultMap="base_result_map" flushCache="true">
    	SELECT <include refid="base_column_list"/> FROM t_bat_loan_prod
		<where>
		</where>
	</select>
    
    <!-- 根据条件查询记录 -->
    <select id="selectByAttr" parameterType="com.boco.SYS.entity.TbatLoanProd" resultMap="base_result_map" flushCache="true">
	    SELECT <include refid="base_column_list"/> FROM t_bat_loan_prod 
	    <where>
	   		<include refid="where_equal"/>
	    </where>
	    <if test="sortColumn != null and sortColumn != ''">
    		order by ${sortColumn}
    	</if>
    </select>

	<!-- 根据模糊条件查询记录 -->
    <select id="selectByLikeAttr" parameterType="com.boco.SYS.entity.TbatLoanProd" resultMap="base_result_map" flushCache="true">
        SELECT <include refid="base_column_list"/> FROM t_bat_loan_prod 
        <where>
        	<include refid="where_like"/>
        </where>
        <if test="sortColumn != null and sortColumn != ''">
    		group by ${sortColumn}
    	</if>
    </select>
    
    <!-- 通过where语句查询 -->
    <select id="selectByWhere" parameterType="java.lang.String" resultMap="base_result_map" flushCache="true">
        SELECT <include refid="base_column_list"/> FROM t_bat_loan_prod 
        <where>
        	${whereStr}
        </where>
    </select>
    
    <!-- 根据条件查询记录数 -->
    <select id="countByAttr" parameterType="com.boco.SYS.entity.TbatLoanProd" resultType="java.lang.Integer" flushCache="true">
    	select count(*) from t_bat_loan_prod 
    	<where>
    		<include refid="where_equal"/>
    	</where>
    </select>
    
    <!-- 根据模糊条件查询记录数 -->
    <select id="countByLikeAttr" parameterType="com.boco.SYS.entity.TbatLoanProd" resultType="java.lang.Integer" flushCache="true">
    	select count(*) from t_bat_loan_prod 
    	<where>
    		<include refid="where_like"/>
    	</where>
    </select>
    
    <!-- 根据自定义条件查询记录数 -->
    <select id="countByWhere" parameterType="java.lang.String" resultType="java.lang.Integer" flushCache="true">
    	select count(*) from t_bat_loan_prod 
    	<where>
       		${whereStr}
       	</where>
    </select>
	<!-- ##############################################批量生成方法########################################### -->
    
    <!-- ##############################################自定义方法############################################# -->
	<!--查询所有第三方数据-->
	<select id="selectAll" resultMap="base_result_map" flushCache="true">
		SELECT
			t.data_date as data_date,
			cd.prod_name as prodt_id,
			o.organname as inst_no,
			t.total_bal	as total_bal
		FROM t_bat_loan_prod t
		left join tb_prod_all cd on (t.prodt_id = cd.prod_code)
		left join fd_organ o on(t.inst_no = o.thiscode)
		<where>
			<include refid="where_equal"/>
		</where>

	</select>

	
	<!-- ##############################################自定义方法############################################# -->
</mapper>